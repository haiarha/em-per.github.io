{"version":3,"file":"component---src-templates-project-template-tsx-916f4a3d672f18777ec5.js","mappings":"mIAGA,MAAMA,EAAqE,CACzEC,MAAO,UACPC,MAAO,OACPC,KAAM,GACNC,OAAQ,GACRC,UAAW,GACXC,SAAU,GACVC,EAAG,IA+FL,IAzFKC,IAA4B,IAADC,EAAA,IAA1B,SAAEC,EAAQ,QAAEC,GAASH,EACzB,MAAM,EAACI,EAAO,EAACC,IAAaC,EAAAA,EAAAA,WAAS,GAE/BC,EACJC,OAAOC,KAAKN,EAAQO,OAEnBC,QAAQC,GAAQT,EAAQO,MAAME,KAC9BC,KAAKD,IAAG,CACPE,KAAMF,EACNG,KAAO,GAAEvB,EAAgBoB,KAAOT,EAAQO,MAAME,SAG5CI,EAAY,CAChB,CAAEF,KAAM,OAAQC,KAAM,KACtB,CAAED,KAAM,WAAYC,KAAM,cAC1B,CAAED,KAAM,QAASC,KAAM,WACvB,CAAED,KAAM,UAAWC,MAAoD,QAA9Cd,EAAAM,EAAYU,MAAKC,IAAA,IAAC,KAACJ,GAAKI,EAAA,MAAc,UAATJ,CAAgB,WAAC,IAAAb,OAAA,EAA9CA,EAAgDc,OAAQ,MAGnF,OACEI,EAAAA,cAAA,OAAKC,UAAU,2CACbD,EAAAA,cAAA,OAAKC,UAAU,2DACbD,EAAAA,cAAA,UACEC,UAAU,yEACVC,QAASA,IAAMhB,GAAWiB,IAAOA,KAEjCH,EAAAA,cAAA,OACEC,UAAU,UACVG,KAAK,OACLC,OAAO,eACPC,QAAQ,YACRC,MAAM,8BAENP,EAAAA,cAAA,QACEQ,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,6BAKRX,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,OAAKC,UAAY,oBAAkBhB,EAAS,GAAK,WAC/Ce,EAAAA,cAAA,OAAKC,UAAU,2BACZJ,EAAUH,KAAIkB,IAAA,IAAC,KAAEjB,EAAI,KAAEC,GAAMgB,EAAA,OAC5BZ,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIlB,EAAMK,UAAU,uBACvBN,EACI,MAKbK,EAAAA,cAAA,OAAKC,UAAU,8BACbD,EAAAA,cAAA,OAAKC,UAAU,kBACZJ,EAAUH,KAAIqB,IAAA,IAAC,KAAEpB,EAAI,KAAEC,GAAMmB,EAAA,OAC5Bf,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIlB,EAAMK,UAAU,uBACvBN,EACI,QAOjBK,EAAAA,cAAA,QAAMC,UAAU,mCAAmClB,GAEnDiB,EAAAA,cAAA,cACEA,EAAAA,cAAA,OAAKC,UAAU,kCACbD,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,OAAKC,UAAU,uBACZb,EAAYM,KAAIsB,IAAA,IAAC,KAAErB,EAAI,KAAEC,GAAMoB,EAAA,OAC9BhB,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIlB,EAAMK,UAAU,wBACvBN,EACI,OAKfK,EAAAA,cAAA,OAAKC,UAAU,2CACbD,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,SAAG,6CAIL,C,sDCrFV,UAZwEnB,IAElE,IAFmE,YACvEoC,GACDpC,EACC,MAAM,KAAEqC,EAAI,MAAEC,EAAK,KAAEC,GAASH,EAAYI,KAE1C,OACErB,EAAAA,cAACsB,EAAAA,EAAI,CAACtC,QAASiC,EAAYjC,SACzBgB,EAAAA,cAAA,OAAKuB,wBAAyB,CAAEC,OAAQJ,KACnC,C","sources":["webpack://portfolio/./src/components/Page.tsx","webpack://portfolio/./src/templates/project-template.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\n\nconst linkPrefixesMap: Record<keyof PageContextGeneral['links'], string> = {\n  Email: \"mailto:\",\n  Phone: \"tel:\",\n  Blog: '',\n  GitHub: '',\n  Instagram: '',\n  LinkedIn: '',\n  X: ''\n};\n\nconst Page: React.FC<{\n  children: React.ReactNode;\n  general: PageContextGeneral;\n}> = ({ children, general }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const socialLinks = (\n    Object.keys(general.links) as (keyof typeof general.links)[]\n  )\n    .filter((key) => general.links[key])\n    .map((key) => ({\n      text: key,\n      href: `${linkPrefixesMap[key]}${general.links[key]}`,\n    }));\n\n  const menuLinks = [\n    { text: \"Home\", href: \"/\" },\n    { text: \"Projects\", href: \"/#projects\" },\n    { text: \"About\", href: \"/#about\" },\n    { text: \"Contact\", href: socialLinks.find(({text}) => text === 'Email')?.href || '#' },\n  ];\n\n  return (\n    <div className=\"bg-slate-100 min-h-screen flex flex-col\">\n      <div className=\"sticky z-10 top-0 left-0 right-0 bg-gray-700 text-white\">\n        <button\n          className=\"block md:hidden absolute top-4 right-4 z-10 p-2 bg-gray-800 text-white\"\n          onClick={() => setIsOpen((s) => !s)}\n        >\n          <svg\n            className=\"w-6 h-6\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M4 6h16M4 12h16m-7 6h7\"\n            ></path>\n          </svg>\n        </button>\n\n        <div className=\"container p-4 mx-auto\">\n          <nav className={`block md:hidden ${isOpen ? \"\" : \"hidden\"}`}>\n            <div className=\"flex flex-col space-y-2\">\n              {menuLinks.map(({ text, href }) => (\n                <Link to={href} className=\"hover:text-gray-300\">\n                  {text}\n                </Link>\n              ))}\n            </div>\n          </nav>\n\n          <nav className=\"hidden md:flex justify-end\">\n            <div className=\"flex space-x-8\">\n              {menuLinks.map(({ text, href }) => (\n                <Link to={href} className=\"hover:text-gray-300\">\n                  {text}\n                </Link>\n              ))}\n            </div>\n          </nav>\n        </div>\n      </div>\n\n      <main className=\"container mx-auto p-4 flex-grow\">{children}</main>\n\n      <footer>\n        <div className=\"bg-gray-200 text-gray-900 py-4\">\n          <div className=\"container mx-auto p-4\">\n            <div className=\"flex justify-center\">\n              {socialLinks.map(({ text, href }) => (\n                <Link to={href} className=\"hover:underline mx-4\">\n                  {text}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-gray-800 text-white text-center py-2\">\n          <div className=\"container mx-auto p-4\">\n            <p>&copy; 2023 Portfolio. All rights reserved.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Page;\n","import React from \"react\";\nimport { PageProps } from \"gatsby\";\nimport Page from \"../components/Page\";\n\nconst PageTemplate: React.FC<PageProps<{}, PageContext<ProjectData>>> = ({\n  pageContext,\n}) => {\n  const { slug, title, html } = pageContext.data;\n\n  return (\n    <Page general={pageContext.general}>\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n    </Page>\n  );\n};\n\nexport default PageTemplate;\n"],"names":["linkPrefixesMap","Email","Phone","Blog","GitHub","Instagram","LinkedIn","X","_ref","_socialLinks$find","children","general","isOpen","setIsOpen","useState","socialLinks","Object","keys","links","filter","key","map","text","href","menuLinks","find","_ref2","React","className","onClick","s","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","_ref3","Link","to","_ref4","_ref5","pageContext","slug","title","html","data","Page","dangerouslySetInnerHTML","__html"],"sourceRoot":""}