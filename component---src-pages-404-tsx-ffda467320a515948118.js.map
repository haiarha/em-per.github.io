{"version":3,"file":"component---src-pages-404-tsx-ffda467320a515948118.js","mappings":"mIAGA,MAAMA,EAAuC,CAC3CC,MAAO,UACPC,MAAO,QA8FT,IAxFKC,IAA4B,IAA3B,SAAEC,EAAQ,QAAEC,GAASF,EACzB,MAAM,EAACG,EAAO,EAACC,IAAaC,EAAAA,EAAAA,WAAS,GAE/BC,EAAY,CAChB,CAAEC,KAAM,OAAQC,KAAM,KACtB,CAAED,KAAM,WAAYC,KAAM,cAC1B,CAAED,KAAM,QAASC,KAAM,WACvB,CAAED,KAAM,UAAWC,KAAO,UAASN,EAAQO,MAAMC,UAE7CC,EACJC,OAAOC,KAAKX,EAAQO,OAEnBK,QAAQC,GAAQb,EAAQO,MAAMM,KAC9BC,KAAKD,IAAG,CACPR,KAAMQ,EACNP,KAAO,GAAEX,EAAgBkB,IAAQ,KAAKb,EAAQO,MAAMM,SAGxD,OACEE,EAAAA,cAAA,OAAKC,UAAU,2CACbD,EAAAA,cAAA,OAAKC,UAAU,2DACbD,EAAAA,cAAA,UACEC,UAAU,yEACVC,QAASA,IAAMf,GAAWgB,IAAOA,KAEjCH,EAAAA,cAAA,OACEC,UAAU,UACVG,KAAK,OACLC,OAAO,eACPC,QAAQ,YACRC,MAAM,8BAENP,EAAAA,cAAA,QACEQ,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,6BAKRX,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,OAAKC,UAAY,oBAAkBf,EAAS,GAAK,WAC/Cc,EAAAA,cAAA,OAAKC,UAAU,2BACZZ,EAAUU,KAAIa,IAAA,IAAC,KAAEtB,EAAI,KAAEC,GAAMqB,EAAA,OAC5BZ,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIvB,EAAMU,UAAU,uBACvBX,EACI,MAKbU,EAAAA,cAAA,OAAKC,UAAU,8BACbD,EAAAA,cAAA,OAAKC,UAAU,kBACZZ,EAAUU,KAAIgB,IAAA,IAAC,KAAEzB,EAAI,KAAEC,GAAMwB,EAAA,OAC5Bf,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIvB,EAAMU,UAAU,uBACvBX,EACI,QAOjBU,EAAAA,cAAA,QAAMC,UAAU,mCAAmCjB,GAEnDgB,EAAAA,cAAA,cACEA,EAAAA,cAAA,OAAKC,UAAU,kCACbD,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,OAAKC,UAAU,uBACZP,EAAYK,KAAIiB,IAAA,IAAC,KAAE1B,EAAI,KAAEC,GAAMyB,EAAA,OAC9BhB,EAAAA,cAACa,EAAAA,GAAI,CAACC,GAAIvB,EAAMU,UAAU,wBACvBX,EACI,OAKfU,EAAAA,cAAA,OAAKC,UAAU,2CACbD,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,SAAG,6CAIL,C,khBCjEV,MAxB0CiB,IAEtCjB,EAAAA,cAACkB,EAAAA,EAAI,CAACjC,QAASA,GACbe,EAAAA,cAAA,MAAIC,UAAU,eAAc,kBAC5BD,EAAAA,cAAA,KAAGC,UAAU,SAAQ,wDAEnBD,EAAAA,cAAA,WAOI,KACJA,EAAAA,cAAA,WACAA,EAAAA,cAACa,EAAAA,GAAI,CAACZ,UAAU,gCAAgCa,GAAG,KAAI,WAEhD,MASR,MAAMK,EAAeA,IAAMnB,EAAAA,cAAA,aAAO,Y","sources":["webpack://portfolio/./src/components/Page.tsx","webpack://portfolio/./src/pages/404.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\n\nconst linkPrefixesMap: Record<any, string> = {\n  email: \"mailto:\",\n  phone: \"tel:\",\n};\n\nconst Page: React.FC<{\n  children: React.ReactNode;\n  general: PageContextGeneral;\n}> = ({ children, general }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const menuLinks = [\n    { text: \"Home\", href: \"/\" },\n    { text: \"Projects\", href: \"/#projects\" },\n    { text: \"About\", href: \"/#about\" },\n    { text: \"Contact\", href: `mailto:${general.links.Email}` },\n  ];\n  const socialLinks = (\n    Object.keys(general.links) as (keyof typeof general.links)[]\n  )\n    .filter((key) => general.links[key])\n    .map((key) => ({\n      text: key,\n      href: `${linkPrefixesMap[key] || \"\"}${general.links[key]}`,\n    }));\n\n  return (\n    <div className=\"bg-slate-100 min-h-screen flex flex-col\">\n      <div className=\"sticky z-10 top-0 left-0 right-0 bg-gray-700 text-white\">\n        <button\n          className=\"block md:hidden absolute top-4 right-4 z-10 p-2 bg-gray-800 text-white\"\n          onClick={() => setIsOpen((s) => !s)}\n        >\n          <svg\n            className=\"w-6 h-6\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth=\"2\"\n              d=\"M4 6h16M4 12h16m-7 6h7\"\n            ></path>\n          </svg>\n        </button>\n\n        <div className=\"container p-4 mx-auto\">\n          <nav className={`block md:hidden ${isOpen ? \"\" : \"hidden\"}`}>\n            <div className=\"flex flex-col space-y-2\">\n              {menuLinks.map(({ text, href }) => (\n                <Link to={href} className=\"hover:text-gray-300\">\n                  {text}\n                </Link>\n              ))}\n            </div>\n          </nav>\n\n          <nav className=\"hidden md:flex justify-end\">\n            <div className=\"flex space-x-8\">\n              {menuLinks.map(({ text, href }) => (\n                <Link to={href} className=\"hover:text-gray-300\">\n                  {text}\n                </Link>\n              ))}\n            </div>\n          </nav>\n        </div>\n      </div>\n\n      <main className=\"container mx-auto p-4 flex-grow\">{children}</main>\n\n      <footer>\n        <div className=\"bg-gray-200 text-gray-900 py-4\">\n          <div className=\"container mx-auto p-4\">\n            <div className=\"flex justify-center\">\n              {socialLinks.map(({ text, href }) => (\n                <Link to={href} className=\"hover:underline mx-4\">\n                  {text}\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-gray-800 text-white text-center py-2\">\n          <div className=\"container mx-auto p-4\">\n            <p>&copy; 2023 Portfolio. All rights reserved.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default Page;\n","import * as React from \"react\";\nimport { Link, HeadFC, PageProps } from \"gatsby\";\nimport Page from \"../components/Page\";\n\nimport general from '../content/general.json';\n\nconst NotFoundPage: React.FC<PageProps> = () => {\n  return (\n    <Page general={general}>\n      <h1 className=\"mt-24 mb-16\">Page not found</h1>\n      <p className=\"mb-12\">\n        Sorry ðŸ˜”, we couldn't find what you were looking for.\n        <br />\n        {process.env.NODE_ENV === \"development\" ? (\n          <>\n            <br />\n            Try creating a page in <code className=\"text-orange-800 p-1 bg-yellow-100 text-lg rounded\">src/pages/</code>.\n            <br />\n          </>\n        ) : null}\n        <br />\n        <Link className=\"text-blue-800 hover:underline\" to=\"/\">\n          Go home\n        </Link>\n        .\n      </p>\n    </Page>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const Head: HeadFC = () => <title>Not found</title>;\n"],"names":["linkPrefixesMap","email","phone","_ref","children","general","isOpen","setIsOpen","useState","menuLinks","text","href","links","Email","socialLinks","Object","keys","filter","key","map","React","className","onClick","s","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","_ref2","Link","to","_ref3","_ref4","NotFoundPage","Page","Head"],"sourceRoot":""}